%%
%% Generic Routines for EtherLab
%% 
%% Copyright (C) 2006
%% Richard Hacker
%% IgH Essen GmbH
%% 
%% License: GPLv3+


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function InitETL() void
%% This function checks whether the EtherLab system has been initialised
%% before already, which is demonstrated by the existance of variable 
%% CompiledModel.ETL.
%% Essentially strings for error messages are prepared.
%%
%% CompiledModel.ETL is populated with the following fields:
%%      ErrMsg: the global string buffer for error messages
%%      ErrStr: a char* that can be used to report initialization errors
%%      NumSt:  Integer Number of discrete sample times
%%      SampleTime: Float vector, sample time of each task
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %if EXISTS(CompiledModel.ETL)
    %return
  %endif

  %assign model_c = LibGetModelDotCFile()

  %assign NumSt = LibNumDiscreteSampleTimes()
  %if FEVAL("verLessThan","simulinkcoder","7.3")
    %% In releases prior to 7.3, LibNumDiscreteSampleTimes() incorrectly
    %% reported the number of sample times.
    %assign NumSt = NumSt - LibGetTID01EQ()
  %endif

  %trace "Initializing ETL Interface"
  %addtorecord CompiledModel ETL { ...
              ErrMsg "etl_errbuf" ...
              ErrStr "errstr_rc" ...
              NumSt  NumSt ...
              }

  %with CompiledModel
  
    %openfile buf

    /* All EtherLAB error messages go in here */
    char %<ETL.ErrMsg>[256];
    %closefile buf
    %<LibSetSourceFileSection(model_c, "Declarations", buf)>

    %openfile buf

    /* Returns true if calculation function is in main execution */
    int ETL_is_major_step(void)
    {
      return %<LibIsMajorTimeStep()>;
    }
    %closefile buf
    %<LibSetSourceFileSection(model_c, "Functions", buf)>

    %openfile buf
    const char __attribute__((unused)) *%<ETL.ErrStr>;

    /* Zero terminated list of sample times for EtherCAT */
    unsigned int etl_st[] = {
    %foreach tid = ETL.NumSt
        %assign Ts = LibGetClockTickStepSize(tid + LibGetTID01EQ())
        %<CAST("Unsigned", Ts*1000000000 + 0.5)>,
    %endforeach
        0U
    };
    %closefile buf
    %<LibMdlStartCustomCode(buf, "header")>
  
  %endwith

%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function ETLBlockTID() void
%% This function returns the true tid of a block
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %assign tid = LibGetGlobalTIDFromLocalSFcnTID(0)
  %return tid - (tid && LibGetTID01EQ())
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function ETLBlockSampleTime() void
%% This function returns the block's sample time
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %return LibGetClockTickStepSize(LibGetGlobalTIDFromLocalSFcnTID(0))
%endfunction
